/**
 * „ÉÅ„É£„Éº„Éà„Éá„Éº„Çø„Éë„Çø„Éº„É≥„ÅÆÂàÜÊûê„Å®‰æ°Ê†º‰πñÈõ¢„ÅÆÁÆóÂá∫
 */

const fs = require('fs');

// ÂàÜÊûêÂØæË±°„ÅÆÈäòÊüÑÔºà‰ª£Ë°®ÁöÑ„Å™„ÇÇ„ÅÆÔºâ
const analysisFiles = [
    'apple.html',
    'microsoft.html', 
    'nvidia.html',
    'meta.html',
    'amazon.html'
];

console.log('=== Chart Data Pattern Analysis ===\n');

analysisFiles.forEach(filename => {
    try {
        const filePath = `./stocks/details/${filename}`;
        const content = fs.readFileSync(filePath, 'utf8');
        
        // ÁèæÂú®‰æ°Ê†ºÂèñÂæó
        const dataCountMatch = content.match(/data-count="([0-9.]+)"/);
        const currentPrice = dataCountMatch ? parseFloat(dataCountMatch[1]) : 0;
        
        // Ê†™‰æ°Êé®Áßª„ÉÅ„É£„Éº„Éà„Éá„Éº„ÇøÊäΩÂá∫
        const stockChartMatch = content.match(/data:\s*\[([0-9,\s.]+)\]/);
        if (stockChartMatch) {
            const chartData = stockChartMatch[1].split(',').map(val => parseFloat(val.trim()));
            const chartLatestPrice = chartData[chartData.length - 1];
            const priceDifference = currentPrice - chartLatestPrice;
            const percentageDiff = ((priceDifference / chartLatestPrice) * 100).toFixed(2);
            
            console.log(`üìä ${filename.replace('.html', '').toUpperCase()}`);
            console.log(`   Current Price: $${currentPrice}`);
            console.log(`   Chart Latest:  $${chartLatestPrice}`);
            console.log(`   Difference:    $${priceDifference.toFixed(2)} (${percentageDiff}%)`);
            console.log(`   Chart Points:  ${chartData.length} data points`);
            console.log(`   Full Data:     [${chartData.join(', ')}]`);
            
            // Â£≤‰∏ä„ÉªÂà©Áõä„Éá„Éº„Çø„ÇÇÊé¢„Åô
            const revenueMatch = content.match(/data:\s*\[([0-9,\s.]+)\].*backgroundColor.*yAxisID.*y/);
            if (revenueMatch) {
                const revenueData = revenueMatch[1].split(',').map(val => parseFloat(val.trim()));
                console.log(`   Revenue Data:  [${revenueData.join(', ')}] (${revenueData.length} points)`);
            }
            
            console.log('');
        } else {
            console.log(`‚ö† ${filename}: No chart data found`);
        }
        
    } catch (error) {
        console.error(`‚úó ${filename}: ${error.message}`);
    }
});

// ÂÖ±ÈÄö„Éë„Çø„Éº„É≥„ÅÆÁâπÂÆö
console.log('\n=== Pattern Summary ===');
console.log('‚Ä¢ Stock Price Charts: 12 data points (monthly progression)');
console.log('‚Ä¢ Revenue Charts: 3-5 data points (annual data)');  
console.log('‚Ä¢ Chart final value should match current price (data-count)');
console.log('‚Ä¢ Need proportional scaling of historical data');